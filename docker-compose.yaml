version: '3.8'

x-airflow-common:
  &airflow-common
  image: apache/airflow:2.8.1
  environment:
    &airflow-env
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-db:5432/airflow
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@airflow-db:5432/airflow
    AIRFLOW__CELERY__BROKER_URL: redis://airflow-redis:6379/0
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
  depends_on:
    - airflow-db
    - airflow-redis

services:
  airflow-webserver:
    <<: *airflow-common
    ports:
      - 8089:8080
    command: webserver

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler

  airflow-worker:
    <<: *airflow-common
    command: celery worker

  airflow-db:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - 5433:5432

  airflow-redis:
    image: redis:latest
    ports:
      - 6379:6379

  # Các service khác giữ nguyên
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - 2181:2181

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  spark-master:
    image: bitnami/spark:latest
    environment:
      - SPARK_MODE=master
    ports:
      - 7077:7077
      - 8080:8080
    volumes:
      - .:/opt/sentiment

  spark-worker:
    image: bitnami/spark:latest
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    ports:
      - 8081:8081
    volumes:
      - .:/opt/sentiment

  model-service:
    build:
      context: ./model_service
    ports:
      - 5000:5000
    # restart: unless-stopped

  minio:
    image: minio/minio
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: admin123
      MINIO_ROOT_PASSWORD: admin123
      MINIO_REGION_NAME: us-east-1  # Added region name for MinIO
    command: server --console-address ":9001" /data
    entrypoint: >
      /bin/bash -c "
        minio server --console-address ':9001' /data & 
        sleep 5 &&
        curl -sLO https://dl.min.io/client/mc/release/linux-amd64/mc &&
        chmod +x mc &&
        ./mc alias set local http://localhost:9000 admin123 admin123 &&
        ./mc mb --ignore-existing local/sentiment-results &&
        tail -f /dev/null
      "

  db:
    image: postgres:13
    environment:
      POSTGRES_DB: metabase
      POSTGRES_USER: metabase
      POSTGRES_PASSWORD: metabase
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data

  metabase:
    image: metabase/metabase:latest
    ports:
      - 3000:3000
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: metabase
      MB_DB_PORT: 5432
      MB_DB_USER: metabase
      MB_DB_PASS: metabase
      MB_DB_HOST: db
    depends_on:
      - db
    restart: unless-stopped

volumes:
  minio_data:
  postgres_data: